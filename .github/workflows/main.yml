# The name that shows up in the GitHub Actions UI
name: GPA Calculator â€“ Multi-Version Archive

on:
  # Trigger this workflow when someone pushes to master or main branch
  push:
    branches:
      - master
      - main

  # Trigger this workflow when someone opens a pull request
  # targeting master or main branch
  pull_request:
    branches:
      - master
      - main

  # Allow manually running the workflow from GitHub Actions UI
  workflow_dispatch:

# This section controls concurrency:
# - Only one deployment job will run at a time in this group
# - Cancel any older jobs queued up (but let in-progress jobs finish)
concurrency:
  group: "pages"
  cancel-in-progress: false

# Define environment variables used throughout the workflow
env:
  BUILD_NUMBER: 1
  BUILD_VERSION: 1.0.0
  PYTHON_VERSION: 3.12.8
  FLET_CLI_VERSION: 0.27.5

  # Make sure Python uses UTF-8 encoding
  PYTHONUTF8: 1

  # Turn off fancy colors and formatting in flet-cli output
  FLET_CLI_NO_RICH_OUTPUT: 1

  # Disable progress bars for faster logs
  UV_NO_PROGRESS: 1

jobs:
  # First job: build the web app
  build:
    runs-on: ubuntu-latest  # Use the latest stable Ubuntu runner

    steps:
      # Step: Check out your repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step: Set up Python
      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      # Step: Install flet-cli at the specified version
      - name: Install flet-cli ${{ env.FLET_CLI_VERSION }}
        run: |
          # Upgrade pip itself
          python -m pip install --upgrade pip
          # Install flet-cli to run builds
          pip install flet-cli==${FLET_CLI_VERSION}

      # Step: Run flet build for the web
      - name: Flet Build Web
        run: |
          # Just printing some info for debugging purposes
          echo "GITHUB_REPOSITORY: ${GITHUB_REPOSITORY}, USER: ${GITHUB_REPOSITORY%/*}, PROJECT_BASE_URL: ${GITHUB_REPOSITORY#*/}"

          # Run flet build for web with specific base URL
          # --base-url is used so your app works correctly on GitHub Pages
          flet build web --base-url ${GITHUB_REPOSITORY#*/} --route-url-strategy hash

      # Step: Upload the built web folder as an artifact
      - name: Upload Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          name: web-build-artifact    # The name of the artifact
          path: build/web            # Path to the built web files

  # Second job: deploy the web app to GitHub Pages
  deploy:
    # Donâ€™t start deploy job until build job completes successfully
    needs: build

    runs-on: ubuntu-latest

    permissions:
      pages: write      # Required to deploy to GitHub Pages
      id-token: write   # Required for secure deployment via OIDC

    environment:
      name: github-pages
      # The deployment step sets this URL output
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      # Step: Configure GitHub Pages settings for this repo
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # Step: Deploy the uploaded web artifact to GitHub Pages
      - name: Deploy to GitHub Pages ðŸš€
        if: github.event_name == 'push'   # Deploy only on push, not on PR
        id: deployment
        uses: actions/deploy-pages@v4.0.5
        with:
          artifact_name: web-build-artifact
